#include "shapekey_test.dtsi"


/ {
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row"; // ダイオードの方向を「列から行」に設定
        wakeup-source; // このスキャンがウェイクアップソースとして機能することを示す

        col-gpios
            = <&pro_micro 15 GPIO_ACTIVE_HIGH> // 列1のGPIOピン（アクティブハイ）
            , <&pro_micro 14 GPIO_ACTIVE_HIGH> // 列2のGPIOピン（アクティブハイ）
            , <&pro_micro 16 GPIO_ACTIVE_HIGH> // 列3のGPIOピン（アクティブハイ）
            ;

        row-gpios
            = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // 行1のGPIOピン（アクティブハイ、プルダウン）
            , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // 行2のGPIOピン（アクティブハイ、プルダウン）
            , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // 行3のGPIOピン（アクティブハイ、プルダウン）
            ;
    };
};
#include <dt-bindings/zmk/matrix_transform.h> // 他のインクルードと一緒に、このオーバーレイの上部に配置する

/ {
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <3>; // "col-gpios" 配列の長さ（列数）
        rows = <3>; // "row-gpios" 配列の長さ（行数）
        map = <
        //   キー1 | キー2 | キー3
            RC(0,0) RC(0,1) RC(0,2)
        //   キー4 | キー5 | キー6
            RC(1,0) RC(1,1) RC(1,2)
        //   キー7 | キー8 | キー9
            RC(2,0) RC(2,1) RC(2,2)
        >;
    };
};